[data-tooltip]{
    position: relative;
    &:hover:before{
        content: attr(data-tooltip);
        position: absolute;
        bottom: calc(100% + 5px);
        left : 50%;
        transform: translate(-50%, 0);
        background-color: black;
        color: #fff;
        padding: 0.2rem;
    }
}

// Simplifying selectors with :is() is similar to how CSS preprocessors handle nested rules:
:is(ul, ol) li {
    color: chocolate;
}

:is(section, article, aside, nav) :is(h1, h2, h3, h4, h5, h6) {
    color: #BADA55;
  }
  
  /* ... which would be the equivalent of: */
  section h1, section h2, section h3, section h4, section h5, section h6, 
  article h1, article h2, article h3, article h4, article h5, article h6, 
  aside h1, aside h2, aside h3, aside h4, aside h5, aside h6, 
  nav h1, nav h2, nav h3, nav h4, nav h5, nav h6 {
    color: #BADA55;
  }

  div:is(.cool, .fun) {
    color: red;
  }
  
  /*
  <div class="cool">match</div>
  <div class="fun">match</div>
  <div class="sdf">match</div>
  <p class="fun">not match</p>
  */

  ol{
    counter-reset: outline;
    padding-left: 1rem;
    li{
      list-style: none;
      &::before{
        content: counters(outline, ".") ". ";
        counter-increment: outline;
      }
    }
  }

  .btn{
    transform: scale(var(--scale, 1.2)) rotate(var(--rotation, 10deg));

    &.big{
      --scale: 2;
    }
    &.small{
      --scale: 0.75;
      --rotation: -10deg;
    }
  }

  .video{
    background-color: chartreuse;
    aspect-ratio: 16 / 9;
  }

  .one-by-one{
    background-color: chocolate;
    aspect-ratio: 1 / 1;
  }